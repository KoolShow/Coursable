name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.13'

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install --all-extras --with dev

    - name: Activate venv
      run: eval $(poetry env activate)

    - name: Run mypy
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-typecheck') }}
      run: poetry run mypy coursable
      continue-on-error: false

    - name: Run unit tests with coverage
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-test') }}
      run: |
        poetry run coverage run -m unittest test
        poetry run coverage report
        poetry run coverage html
      continue-on-error: false

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-test') }}
      with:
        name: coverage-report
        path: htmlcov/

    - name: Run pylint
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-lint') }}
      run: poetry run pylint coursable || true
      continue-on-error: true

    - name: Build development package
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-build') }}
      run: poetry build

    - name: Upload artifacts
      if: ${{ ! contains(env.COMMIT_MESSAGE, '--no-build') }}
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: dist/